{
  "RadialMenu": [
    {
      "fileExt": ".cs",
      "text": "c#",
      "MenuItems": [
        {
          "name": "Thread",
          "parent": "Main",
          "submenu": [],
          "children": [ "New thread" ],
          "icon":  "Thread" 
        },
        {
          "name": "Test",
          "parent": "Main",
          "submenu": [],
          "children": [ "Asset" ],
          "icon":  "Test" 
        },
        {
          "name": "Code",
          "parent": "Main",
          "submenu": [ "I/O", "Method/Keyword", "Condition", "Loop", "Variables", "Operator", "Comparetor" ],
          "children": [],
          "icon": "Code"
        },
        {
          "name": "UI",
          "parent": "Main",
          "submenu": [],
          "children": [ "New Window" ],
          "icon": "WindowsForm"
        },
        {
          "name": "I/O",
          "parent": "Code",
          "submenu": [],
          "children": [ "Write", "WriteLine", "ReadKey", "ReadInputLine", "OpenText", "WritetoFiles" ],
          "icon": "TextFile"
        },
        {
          "name": "Method/Keyword",
          "parent": "Code",
          "submenu": [],
          "children": [ "Static", "Public", "Private", "Protected", "Internal", "Return" ],
          "icon": "Method"
        },
        {
          "name": "Condition",
          "parent": "Code",
          "submenu": [],
          "children": [ "if", "else", "else if" ],
          "icon":  "MeasureTree" 
        },
        {
          "name": "Loop",
          "parent": "Code",
          "submenu": [],
          "children": [ "switch", "case", "while", "break", "for", "continue" ],
          "icon":  "While"
        },
        {
          "name": "Variables",
          "parent": "Code",
          "submenu": [],
          "children": [ "Void", "Integer", "Double", "Character", "Boolean", "String", "Array" ],
          "icon": "LocalVariable"
        },
        {
          "name": "Operator",
          "parent": "Code",
          "submenu": [],
          "children": [ "Equal", "Plus", "Minus", "Multiply", "Divide", "Mod", "And", "()" ],
          "icon": "Operator"
        },
        {
          "name": "Comparator",
          "parent": "Code",
          "submenu": [],
          "children": [ "&&", "||", "==", ">", "<", ">=", "<=", "!=", "()" ],
          "icon": "DecisionNode"
        }
      ],
      "commands": [
        {
          "text": "New thread",
          "parent": "Thread",
          "preview": "",
          "color": "#FF00FFFF"
        },
        {
          "text": "Assert",
          "parent": "Test",
          "preview": "",
          "color": "#FF00FFFF"
        },
        {
          "text": "Write",
          "parent": "I/O",
          "preview": "Console.Write(\"Content Here\");",
          "color": "#FF00FFFF"
        },
        {
          "text": "WriteLine",
          "parent": "I/O",
          "preview": "Console.WriteLine(\"Content Here\");",
          "color": "#FF00FFFF"
        },
        {
          "text": "ReadKey",
          "parent": "I/O",
          "preview": "Console.ReadKey();",
          "color": "#FF00FFFF"
        },
        {
          "text": "ReadInputLine",
          "parent": "I/O",
          "preview": "",
          "color": "#FF00FFFF"
        },
        {
          "text": "OpenText",
          "parent": "I/O",
          "preview": "File.OpenText(path);",
          "color": "#FF00FFFF"
        },
        {
          "text": "WritetoFiles",
          "parent": "I/O",
          "preview": "File.WriteAllText(path, createText);",
          "color": "#FF00FFFF"
        },
        {
          "text": "Static",
          "parent": "Method/Keyword",
          "preview": "static",
          "color": "#FF00FFFF"
        },
        {
          "text": "Public",
          "parent": "Method/Keyword",
          "preview": "public",
          "color": "#FF00FFFF"
        },
        {
          "text": "Private",
          "parent": "Method/Keyword",
          "preview": "private",
          "color": "#FF00FFFF"
        },
        {
          "text": "Protected",
          "parent": "Method/Keyword",
          "preview": "protected",
          "color": "#FefeFFF"
        },
        {
          "text": "Internal",
          "parent": "Method/Keyword",
          "preview": "internal",
          "color": "#FF00FFFF"
        },
        {
          "text": "Return",
          "parent": "Method/Keyword",
          "preview": "return;",
          "color": "#FF00FFFF"
        },
        {
          "text": "if",
          "parent": "Condition",
          "preview": "if ( conditions ) {\n   statements;\n}",
          "color": "#FF00FFFF"
        },
        {
          "text": "else",
          "parent": "Condition",
          "preview": "else {\n   statements;\n} ",
          "color": "#FFFFFF00"
        },
        {
          "text": "else if",
          "parent": "Condition",
          "preview": "else if ( conditions ) {\n  statements;\n}",
          "color": "#FFFF0000"
        },
        {
          "text": "switch",
          "parent": "Condition",
          "preview": "switch ( conditions ) {\n  statements;\n}",
          "color": "##FF008000"
        },
        {
          "text": "case",
          "parent": "Condition",
          "preview": "case :",
          "color": "##FF008000"
        },
        {
          "text": "while",
          "parent": "Loop",
          "preview": "while ( conditions ){\n  statements;\n  i++;\n}",
          "color": "#FF00FFFF"
        },
        {
          "text": "break",
          "parent": "Loop",
          "preview": "break;",
          "color": "#FF00FFFF"
        },
        {
          "text": "for",
          "parent": "Loop",
          "preview": "for ( statement 1; statement 2; statement 3 ){\n  statements;\n}",
          "color": "#FF00FFFF"
        },
        {
          "text": "continue",
          "parent": "Loop",
          "preview": "continue;",
          "color": "#FF00FFFF"
        },
        {
          "text": "Void",
          "parent": "Variables",
          "preview": "void",
          "color": "#FF00FFFF"
        },
        {
          "text": "Integer",
          "parent": "Variables",
          "preview": "Int",
          "color": "#FF00FFFF"
        },
        {
          "text": "Double",
          "parent": "Variables",
          "preview": "Double",
          "color": "#FF00FFFF"
        },
        {
          "text": "Character",
          "parent": "Variables",
          "preview": "Char",
          "color": "#FF00FFFF"
        },
        {
          "text": "Boolean",
          "parent": "Variables",
          "preview": "Bool",
          "color": "#FF00FFFF"
        },
        {
          "text": "String",
          "parent": "Variables",
          "preview": "String",
          "color": "#FF00FFFF"
        },
        {
          "text": "Array",
          "parent": "Variables",
          "preview": "[]",
          "color": "#FF00FFFF"
        },
        {
          "text": "Equal",
          "parent": "Operator",
          "preview": "=",
          "color": "#FF00FFFF"
        },
        {
          "text": "Plus",
          "parent": "Operator",
          "preview": "+",
          "color": "#FF00FFFF"
        },
        {
          "text": "Minus",
          "parent": "Operator",
          "preview": "-",
          "color": "#FF00FFFF"
        },
        {
          "text": "Multiply",
          "parent": "Operator",
          "preview": "*",
          "color": "#FF00FFFF"
        },
        {
          "text": "Divide",
          "parent": "Operator",
          "preview": "/",
          "color": "#FF00FFFF"
        },
        {
          "text": "Mod",
          "parent": "Operator",
          "preview": "%",
          "color": "#FF00FFFF"
        },
        {
          "text": "And",
          "parent": "Operator",
          "preview": "&",
          "color": "#FF00FFFF"
        },
        {
          "text": "Or",
          "parent": "Operator",
          "preview": "|",
          "color": "#FF00FFFF"
        },
        {
          "text": "()",
          "parent": "Operator",
          "preview": "()",
          "color": "#FF00FFFF"
        },
        {
          "text": "&&",
          "parent": "Comparetor",
          "preview": "&&",
          "color": "#FF00FFFF"
        },
        {
          "text": "||",
          "parent": "Comparetor",
          "preview": "||",
          "color": "#FF00FFFF"
        },
        {
          "text": "==",
          "parent": "Comparetor",
          "preview": "==",
          "color": "#FF00FFFF"
        },
        {
          "text": ">",
          "parent": "Comparetor",
          "preview": ">",
          "color": "#FF00FFFF"
        },
        {
          "text": "<",
          "parent": "Comparetor",
          "preview": "<",
          "color": "#FF00FFFF"
        },
        {
          "text": ">=",
          "parent": "Comparetor",
          "preview": ">=",
          "color": "#FF00FFFF"
        },
        {
          "text": "<=",
          "parent": "Comparetor",
          "preview": "<=",
          "color": "#FF00FFFF"
        },
        {
          "text": "!=",
          "parent": "Comparetor",
          "preview": "!=",
          "color": "#FF00FFFF"
        },
        {
          "text": "()",
          "parent": "Comparetor",
          "preview": "()",
          "color": "#FF00FFFF"
        },
        {
          "text": "New Window",
          "parent": "UI",
          "preview": "",
          "color": "#FF00FFFF"
        }
      ]
    },
    {
      "fileExt": ".xaml",
      "text": "XAML",
      "MenuItems": [
        {

        }
      ]
    }
  ]
}